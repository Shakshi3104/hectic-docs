{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hectic Welcome! This is the documentation of Hectic (flower\ud83c\udf3b and blossom\ud83c\udf38), last updated October 17, 2021. Quickstart Example Frameworks flower\ud83c\udf3b blossom\ud83c\udf38","title":"Home"},{"location":"#hectic","text":"Welcome! This is the documentation of Hectic (flower\ud83c\udf3b and blossom\ud83c\udf38), last updated October 17, 2021.","title":"Hectic"},{"location":"#quickstart-example","text":"","title":"Quickstart Example"},{"location":"#frameworks","text":"","title":"Frameworks"},{"location":"#flower","text":"","title":"flower\ud83c\udf3b"},{"location":"#blossom","text":"","title":"blossom\ud83c\udf38"},{"location":"build_docs/","text":"For building documentation Dependencies mkdocs mkdocs-material mkdocstrings Install 1 conda install -c conda-forge mkdocs mkdocs-material mkdocstrings pytkdocs","title":"For building documentation"},{"location":"build_docs/#for-building-documentation","text":"","title":"For building documentation"},{"location":"build_docs/#dependencies","text":"mkdocs mkdocs-material mkdocstrings","title":"Dependencies"},{"location":"build_docs/#install","text":"1 conda install -c conda-forge mkdocs mkdocs-material mkdocstrings pytkdocs","title":"Install"},{"location":"quickstart/","text":"Quick start \u3053\u306e\u30da\u30fc\u30b8\u3067\u306f flower \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u4f7f\u3044\u65b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002 Dependencies Hectic (flower & blossom)\u306f\u3001\u4e0b\u8a18\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u5fc5\u8981\u3067\u3059\u3002 tensorflow >= 2.4 tensorflow-addons tfgarden : pip install git+https://github.com/Shakshi3104/tfgarden.git sensorutils : pip install git+https://github.com/haselab-dev/sensorutils.git numpy scipy pandas Flower\u30af\u30e9\u30b9\u306e\u5229\u7528 flower.Flower \u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001HASC\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306a\u3069\u306e\u884c\u52d5\u8a8d\u8b58\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u5bfe\u3059\u308b\u30e2\u30c7\u30eb\u306e\u63a8\u5b9a\u7cbe\u5ea6\u3092\u691c\u8a3c\u3059\u308b\u5b9f\u9a13\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30e2\u30c7\u30eb\u306e\u6307\u5b9a\u306f SupportedModel \u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u6307\u5b9a\u306f SupportedDataset \u3092\u4f7f\u3044\u307e\u3059\u3002 \u4e0b\u8a18\u306b\u793a\u3059\u30b3\u30fc\u30c9\u306fHASC\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306bMobileNet\u3092\u9069\u7528\u3059\u308b\u6700\u3082\u7c21\u5358\u306a\u4f8b\u3067\u3059\u3002 1 2 3 4 5 6 from flower import * # Flower\u30af\u30e9\u30b9\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316 flower = Flower ( SupportedModel . MobileNet ) # \u5b66\u7fd2 & \u8a55\u4fa1 flower . fit ( epochs = 10 , learning_rate = 1e-3 , batch = 128 , datasets = SupportedDataset . HASC ) \u307e\u305f\u3001Attention\u30e2\u30b8\u30e5\u30fc\u30eb\u3084RNN\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u633f\u5165\u3057\u305f\u30e2\u30c7\u30eb\u3084Hand-crafted features\u3092\u7d50\u5408\u3057\u305f\u30e2\u30c7\u30eb\u306e\u5b9f\u9a13\u3092\u884c\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u30e2\u30b8\u30e5\u30fc\u30eb\u306f SupportedSubmodule \u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 \u4e0b\u8a18\u306b\u793a\u3059\u30b3\u30fc\u30c9\u306fWISDM\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u5bfe\u3057\u3066SE\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u633f\u5165\u3057\u305fMobileNet\u306e\u5b9f\u9a13\u3068Hand-crafted features\u3092\u7d50\u5408\u3057\u305fMobileNet\u306e\u5b9f\u9a13\u3092\u884c\u3046\u4f8b\u3067\u3059\u3002 1 2 3 4 5 6 7 8 9 from flower import * # SE\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u633f\u5165\u3057\u305fMobileNet\u306e\u5b9f\u9a13 flower = Flower ( SupportedModel . MobileNet , SupportedSubmodule . SENet ) flower . fit ( epochs = 10 , learning_rate = 1e-3 , batch = 128 , datasets = SupportedDataset . WISDM ) # HCF\u3092\u7d50\u5408\u3057\u305fMobileNet\u306e\u5b9f\u9a13 flower = Flower ( SupportedModel . MobileNet , concat_hcf = True ) flower . fit ( epochs = 10 , learning_rate = 1e-3 , batch = 128 , datasets = SupportedDataset . WISDM ) Note flower.Flower \u3067\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u30e2\u30c7\u30eb\u3001\u30b5\u30d6\u30e2\u30b8\u30e5\u30fc\u30eb\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f \u3053\u3061\u3089 \u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002","title":"Quickstart"},{"location":"quickstart/#quick-start","text":"\u3053\u306e\u30da\u30fc\u30b8\u3067\u306f flower \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u4f7f\u3044\u65b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002","title":"Quick start"},{"location":"quickstart/#dependencies","text":"Hectic (flower & blossom)\u306f\u3001\u4e0b\u8a18\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u5fc5\u8981\u3067\u3059\u3002 tensorflow >= 2.4 tensorflow-addons tfgarden : pip install git+https://github.com/Shakshi3104/tfgarden.git sensorutils : pip install git+https://github.com/haselab-dev/sensorutils.git numpy scipy pandas","title":"Dependencies"},{"location":"quickstart/#flower","text":"flower.Flower \u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001HASC\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306a\u3069\u306e\u884c\u52d5\u8a8d\u8b58\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u5bfe\u3059\u308b\u30e2\u30c7\u30eb\u306e\u63a8\u5b9a\u7cbe\u5ea6\u3092\u691c\u8a3c\u3059\u308b\u5b9f\u9a13\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30e2\u30c7\u30eb\u306e\u6307\u5b9a\u306f SupportedModel \u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u6307\u5b9a\u306f SupportedDataset \u3092\u4f7f\u3044\u307e\u3059\u3002 \u4e0b\u8a18\u306b\u793a\u3059\u30b3\u30fc\u30c9\u306fHASC\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306bMobileNet\u3092\u9069\u7528\u3059\u308b\u6700\u3082\u7c21\u5358\u306a\u4f8b\u3067\u3059\u3002 1 2 3 4 5 6 from flower import * # Flower\u30af\u30e9\u30b9\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316 flower = Flower ( SupportedModel . MobileNet ) # \u5b66\u7fd2 & \u8a55\u4fa1 flower . fit ( epochs = 10 , learning_rate = 1e-3 , batch = 128 , datasets = SupportedDataset . HASC ) \u307e\u305f\u3001Attention\u30e2\u30b8\u30e5\u30fc\u30eb\u3084RNN\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u633f\u5165\u3057\u305f\u30e2\u30c7\u30eb\u3084Hand-crafted features\u3092\u7d50\u5408\u3057\u305f\u30e2\u30c7\u30eb\u306e\u5b9f\u9a13\u3092\u884c\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u30e2\u30b8\u30e5\u30fc\u30eb\u306f SupportedSubmodule \u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 \u4e0b\u8a18\u306b\u793a\u3059\u30b3\u30fc\u30c9\u306fWISDM\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u5bfe\u3057\u3066SE\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u633f\u5165\u3057\u305fMobileNet\u306e\u5b9f\u9a13\u3068Hand-crafted features\u3092\u7d50\u5408\u3057\u305fMobileNet\u306e\u5b9f\u9a13\u3092\u884c\u3046\u4f8b\u3067\u3059\u3002 1 2 3 4 5 6 7 8 9 from flower import * # SE\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u633f\u5165\u3057\u305fMobileNet\u306e\u5b9f\u9a13 flower = Flower ( SupportedModel . MobileNet , SupportedSubmodule . SENet ) flower . fit ( epochs = 10 , learning_rate = 1e-3 , batch = 128 , datasets = SupportedDataset . WISDM ) # HCF\u3092\u7d50\u5408\u3057\u305fMobileNet\u306e\u5b9f\u9a13 flower = Flower ( SupportedModel . MobileNet , concat_hcf = True ) flower . fit ( epochs = 10 , learning_rate = 1e-3 , batch = 128 , datasets = SupportedDataset . WISDM ) Note flower.Flower \u3067\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u30e2\u30c7\u30eb\u3001\u30b5\u30d6\u30e2\u30b8\u30e5\u30fc\u30eb\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f \u3053\u3061\u3089 \u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002","title":"Flower\u30af\u30e9\u30b9\u306e\u5229\u7528"},{"location":"refs/blossom/","text":"blossom\ud83c\udf38 experiments options blossom.wisteria wisteria is a sub-framework. wisteria","title":"blossom"},{"location":"refs/blossom/#blossom","text":"experiments options","title":"blossom\ud83c\udf38"},{"location":"refs/blossom/#blossomwisteria","text":"wisteria is a sub-framework. wisteria","title":"blossom.wisteria"},{"location":"refs/flower/","text":"flower\ud83c\udf3b experiments datasets augmentation features options flower.hydrangea hydrangea is a sub-framework for flower . hydrangea","title":"flower"},{"location":"refs/flower/#flower","text":"experiments datasets augmentation features options","title":"flower\ud83c\udf3b"},{"location":"refs/flower/#flowerhydrangea","text":"hydrangea is a sub-framework for flower . hydrangea","title":"flower.hydrangea"},{"location":"refs/blossom/experiments/","text":"blossom.experiments Blossom","title":"blossom.experiments"},{"location":"refs/blossom/experiments/#blossomexperiments","text":"","title":"blossom.experiments"},{"location":"refs/blossom/experiments/#blossom","text":"","title":"Blossom"},{"location":"refs/blossom/options/","text":"blossom.options ManualModel 1 blossom.options.ManualModel case PyramidNet34 case PyramidNet50 case PyramidNet101 case PyramidNet152 case PyramidEfficientNetB0 case EfficientNetSmallA0 case EfficientNetSmallB0 case PyramidEfficientNetSmallA0 case PyramidEfficientNetSmallB0 SearchableConvBlock SkipOperation","title":"blossom.options"},{"location":"refs/blossom/options/#blossomoptions","text":"","title":"blossom.options"},{"location":"refs/blossom/options/#manualmodel","text":"1 blossom.options.ManualModel case PyramidNet34 case PyramidNet50 case PyramidNet101 case PyramidNet152 case PyramidEfficientNetB0 case EfficientNetSmallA0 case EfficientNetSmallB0 case PyramidEfficientNetSmallA0 case PyramidEfficientNetSmallB0","title":"ManualModel"},{"location":"refs/blossom/options/#searchableconvblock","text":"","title":"SearchableConvBlock"},{"location":"refs/blossom/options/#skipoperation","text":"","title":"SkipOperation"},{"location":"refs/blossom/wisteria/","text":"wisteria wisteria is a sub-framework. In wisteria , hand-kneaded models for building the lightweight model have been implemented. Models blossom.wisteria.models PyramidEfficientNetB0 : EfficientNet B0\u306bPyramidNet\u3063\u307d\u3044\u30d5\u30a3\u30eb\u30bf\u6570\u306e\u5897\u3084\u3057\u65b9\u3092\u9069\u7528\u3057\u305f\u30e2\u30c7\u30eb PyramidEfficientNetSmallA0 : Pyramid-EfficientNet B0\u306bEfficientNet small-A0\u3068\u540c\u3058\u30d6\u30ed\u30c3\u30af\u306e\u524a\u9664\u3092\u9069\u7528\u3057\u305f\u30e2\u30c7\u30eb PyramidEfficientNetSmallB0 : Pyramid-EfficientNet B0\u306bEfficientNet small-B0\u3068\u540c\u3058\u30ec\u30a4\u30e4\u30fc\u306e\u524a\u9664\u3092\u9069\u7528\u3057\u305f\u30e2\u30c7\u30eb EfficientNetSmallA0 : EfficientNet B0\u306eMBConv\u30d6\u30ed\u30c3\u30af\u306e\u5f8c\u308d3\u30d6\u30ed\u30c3\u30af\u3092\u524a\u9664\u3057\u305f\u30e2\u30c7\u30eb EfficientNetSmallB0 : EfficientNet B0\u306e\u5404MBConv\u30d6\u30ed\u30c3\u30af\u306e\u5c64\u30921\u5c64\u306b\u3057\u305f\u30e2\u30c7\u30eb","title":"wisteria"},{"location":"refs/blossom/wisteria/#wisteria","text":"wisteria is a sub-framework. In wisteria , hand-kneaded models for building the lightweight model have been implemented.","title":"wisteria"},{"location":"refs/blossom/wisteria/#models","text":"blossom.wisteria.models PyramidEfficientNetB0 : EfficientNet B0\u306bPyramidNet\u3063\u307d\u3044\u30d5\u30a3\u30eb\u30bf\u6570\u306e\u5897\u3084\u3057\u65b9\u3092\u9069\u7528\u3057\u305f\u30e2\u30c7\u30eb PyramidEfficientNetSmallA0 : Pyramid-EfficientNet B0\u306bEfficientNet small-A0\u3068\u540c\u3058\u30d6\u30ed\u30c3\u30af\u306e\u524a\u9664\u3092\u9069\u7528\u3057\u305f\u30e2\u30c7\u30eb PyramidEfficientNetSmallB0 : Pyramid-EfficientNet B0\u306bEfficientNet small-B0\u3068\u540c\u3058\u30ec\u30a4\u30e4\u30fc\u306e\u524a\u9664\u3092\u9069\u7528\u3057\u305f\u30e2\u30c7\u30eb EfficientNetSmallA0 : EfficientNet B0\u306eMBConv\u30d6\u30ed\u30c3\u30af\u306e\u5f8c\u308d3\u30d6\u30ed\u30c3\u30af\u3092\u524a\u9664\u3057\u305f\u30e2\u30c7\u30eb EfficientNetSmallB0 : EfficientNet B0\u306e\u5404MBConv\u30d6\u30ed\u30c3\u30af\u306e\u5c64\u30921\u5c64\u306b\u3057\u305f\u30e2\u30c7\u30eb","title":"Models"},{"location":"refs/flower/augmentation/","text":"flower.augmentation Data augmentation flower.augmentation.flipping 1 flower . augmentation . flipping ( x , overall = True , axis = 0 ) Arguments x: channel-last\u306a\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf, shape=(window_size, channel) or shape=(batch_size, window_size, channel) overall: True\u306e\u3068\u304d\u3001\u5168\u3066\u306e\u8ef8\u3092\u540c\u6642\u306b\u53cd\u8ee2\u3055\u305b\u308b\u3002False\u306e\u3068\u304d\u3001\u5404\u8ef8\u3054\u3068\u306b\u53cd\u8ee2\u3055\u305b\u308b\u3002 axis: flip\u3059\u308b\u8ef8 Returns x_new: flip\u3057\u305fx flower.augmentation.swapping 1 flower . augmentation . swapping ( x ) Arguments x: channel-last\u306a\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf, shape=(window_size, channel) or shape=(batch_size, window_size, channel) , channel = 3 or 6\u306a\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf\u306e\u307f\u30b5\u30dd\u30fc\u30c8 Returns x_new: swap\u3057\u305fx tf.funcion tf.data.Dataset.map() \u3067\u4f7f\u3046\u95a2\u6570 flower.augmentation.augment 1 flower . augmentation . augment ( x , y ) Arguments x: channel-last\u306a\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf, shape=(window_size, 3) y: x\u306b\u5bfe\u5fdc\u3059\u308b\u30e9\u30d9\u30eb Returns x, y flower.augmentation.augment_batch 1 flower . augmentation . augment_batch ( x , y ) Arguments x: channel-last\u306a\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf, shape=(batch_size, window_size, 3) y: x\u306b\u5bfe\u5fdc\u3059\u308b\u30e9\u30d9\u30eb Returns x, y: \u30c7\u30fc\u30bf\u62e1\u5f35\u3057\u305f\u30c7\u30fc\u30bf, \u30e9\u30d9\u30eb","title":"flower.augmentation"},{"location":"refs/flower/augmentation/#floweraugmentation","text":"","title":"flower.augmentation"},{"location":"refs/flower/augmentation/#data-augmentation","text":"","title":"Data augmentation"},{"location":"refs/flower/augmentation/#floweraugmentationflipping","text":"1 flower . augmentation . flipping ( x , overall = True , axis = 0 )","title":"flower.augmentation.flipping"},{"location":"refs/flower/augmentation/#arguments","text":"x: channel-last\u306a\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf, shape=(window_size, channel) or shape=(batch_size, window_size, channel) overall: True\u306e\u3068\u304d\u3001\u5168\u3066\u306e\u8ef8\u3092\u540c\u6642\u306b\u53cd\u8ee2\u3055\u305b\u308b\u3002False\u306e\u3068\u304d\u3001\u5404\u8ef8\u3054\u3068\u306b\u53cd\u8ee2\u3055\u305b\u308b\u3002 axis: flip\u3059\u308b\u8ef8","title":"Arguments"},{"location":"refs/flower/augmentation/#returns","text":"x_new: flip\u3057\u305fx","title":"Returns"},{"location":"refs/flower/augmentation/#floweraugmentationswapping","text":"1 flower . augmentation . swapping ( x )","title":"flower.augmentation.swapping"},{"location":"refs/flower/augmentation/#arguments_1","text":"x: channel-last\u306a\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf, shape=(window_size, channel) or shape=(batch_size, window_size, channel) , channel = 3 or 6\u306a\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf\u306e\u307f\u30b5\u30dd\u30fc\u30c8","title":"Arguments"},{"location":"refs/flower/augmentation/#returns_1","text":"x_new: swap\u3057\u305fx","title":"Returns"},{"location":"refs/flower/augmentation/#tffuncion","text":"tf.data.Dataset.map() \u3067\u4f7f\u3046\u95a2\u6570","title":"tf.funcion"},{"location":"refs/flower/augmentation/#floweraugmentationaugment","text":"1 flower . augmentation . augment ( x , y )","title":"flower.augmentation.augment"},{"location":"refs/flower/augmentation/#arguments_2","text":"x: channel-last\u306a\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf, shape=(window_size, 3) y: x\u306b\u5bfe\u5fdc\u3059\u308b\u30e9\u30d9\u30eb","title":"Arguments"},{"location":"refs/flower/augmentation/#returns_2","text":"x, y","title":"Returns"},{"location":"refs/flower/augmentation/#floweraugmentationaugment_batch","text":"1 flower . augmentation . augment_batch ( x , y )","title":"flower.augmentation.augment_batch"},{"location":"refs/flower/augmentation/#arguments_3","text":"x: channel-last\u306a\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf, shape=(batch_size, window_size, 3) y: x\u306b\u5bfe\u5fdc\u3059\u308b\u30e9\u30d9\u30eb","title":"Arguments"},{"location":"refs/flower/augmentation/#returns_3","text":"x, y: \u30c7\u30fc\u30bf\u62e1\u5f35\u3057\u305f\u30c7\u30fc\u30bf, \u30e9\u30d9\u30eb","title":"Returns"},{"location":"refs/flower/datasets/","text":"flower.datasets Dataset via tf.data flower.datasets.datasets.load_hasc 1 flower . datasets . datasets . load_hasc ( batch = 20 , augmentation = False , extraction = False , shuffled_id = None , valid = True , hcf_only = False , data_dir = \"./data/\" , drop_remainder = True ) HASC\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092 tf.data \u5f62\u5f0f\u3067\u8aad\u307f\u8fbc\u3080\u3002 Reference: HASC Challenge: gathering large scale human activity corpus for the real-world activity understandings Argments batch: \u30d0\u30c3\u30c1\u30b5\u30a4\u30ba augmentation: \u30c7\u30fc\u30bf\u62e1\u5f35\u3092\u3059\u308b\u304b\u3069\u3046\u304b extraction: \u7279\u5fb4\u91cf\u62bd\u51fa\u3092\u3059\u308b\u304b\u3069\u3046\u304b shuffled_id: \u30b7\u30e3\u30c3\u30d5\u30eb\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8ID valid: \u691c\u8a3c\u7528\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u304b\u3069\u3046\u304b\u3002True\u306e\u3068\u304d\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092train:valid:test\u3067\u5206\u5272\u3059\u308b\u3002False\u306e\u3068\u304d\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092train(train+valid):test\u3067\u5206\u5272\u3059\u308b hcf_only: \u7279\u5fb4\u91cf\u306e\u307f\u3092\u8fd4\u3059 data_dir: \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea drop_remainder: \u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u4ee5\u4e0b\u306e\u30d0\u30c3\u30c1\u3092\u6368\u3066\u308b\u304b\u3069\u3046\u304b Returns train_ds: tf.data.Dataset, \u5b66\u7fd2\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 valid_ds: tf.data.Dataset, \u691c\u8a3c\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8, valid=False\u306e\u3068\u304d\u306ftest_ds\u3068\u540c\u3058\u3082\u306e test_ds: tf.data.Dataset, \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 flower.datasets.datasets.load_uci 1 flower . datasets . datasets . load_uci ( batch = 20 , augmentation = False , extraction = False , shuffled_id = None , valid = True , hcf_only = False , data_dir = \"./data/\" , drop_remainder = True ) UCI\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092 tf.data \u5f62\u5f0f\u3067\u8aad\u307f\u8fbc\u3080\u3002 Reference: A Public Domain Dataset for Human Activity Recognition Using Smartphones Dataset link: https://archive.ics.uci.edu/ml/machine-learning-databases/00240/UCI%20HAR%20Dataset.zip Argments batch: \u30d0\u30c3\u30c1\u30b5\u30a4\u30ba augmentation: \u30c7\u30fc\u30bf\u62e1\u5f35\u3092\u3059\u308b\u304b\u3069\u3046\u304b extraction: \u7279\u5fb4\u91cf\u62bd\u51fa\u3092\u3059\u308b\u304b\u3069\u3046\u304b shuffled_id: \u30b7\u30e3\u30c3\u30d5\u30eb\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8ID valid: \u691c\u8a3c\u7528\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u304b\u3069\u3046\u304b\u3002True\u306e\u3068\u304d\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092train:valid:test\u3067\u5206\u5272\u3059\u308b\u3002False\u306e\u3068\u304d\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092train(train+valid):test\u3067\u5206\u5272\u3059\u308b hcf_only: \u7279\u5fb4\u91cf\u306e\u307f\u3092\u8fd4\u3059 data_dir: \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea drop_remainder: \u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u4ee5\u4e0b\u306e\u30d0\u30c3\u30c1\u3092\u6368\u3066\u308b\u304b\u3069\u3046\u304b Returns train_ds: tf.data.Dataset, \u5b66\u7fd2\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 valid_ds: tf.data.Dataset, \u691c\u8a3c\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8, valid=False\u306e\u3068\u304d\u306ftest_ds\u3068\u540c\u3058\u3082\u306e test_ds: tf.data.Dataset, \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 flower.datasets.datasets.load_wisdm 1 flower . datasets . datasets . load_wisdm ( batch = 20 , augmentation = False , extraction = False , shuffled_id = None , valid = True , hcf_only = False , data_dir = \"./data/\" , drop_remainder = True ) WISDM\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092 tf.data \u5f62\u5f0f\u3067\u8aad\u307f\u8fbc\u3080\u3002 Reference: Activity Recognition using Cell Phone Accelerometers Dataset link: https://www.cis.fordham.edu/wisdm/includes/datasets/latest/WISDM_ar_latest.tar.gz Argments batch: \u30d0\u30c3\u30c1\u30b5\u30a4\u30ba augmentation: \u30c7\u30fc\u30bf\u62e1\u5f35\u3092\u3059\u308b\u304b\u3069\u3046\u304b extraction: \u7279\u5fb4\u91cf\u62bd\u51fa\u3092\u3059\u308b\u304b\u3069\u3046\u304b shuffled_id: \u30b7\u30e3\u30c3\u30d5\u30eb\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8ID valid: \u691c\u8a3c\u7528\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u304b\u3069\u3046\u304b\u3002True\u306e\u3068\u304d\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092train:valid:test\u3067\u5206\u5272\u3059\u308b\u3002False\u306e\u3068\u304d\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092train(train+valid):test\u3067\u5206\u5272\u3059\u308b hcf_only: \u7279\u5fb4\u91cf\u306e\u307f\u3092\u8fd4\u3059 data_dir: \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea drop_remainder: \u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u4ee5\u4e0b\u306e\u30d0\u30c3\u30c1\u3092\u6368\u3066\u308b\u304b\u3069\u3046\u304b Returns train_ds: tf.data.Dataset, \u5b66\u7fd2\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 valid_ds: tf.data.Dataset, \u691c\u8a3c\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8, valid=False\u306e\u3068\u304d\u306ftest_ds\u3068\u540c\u3058\u3082\u306e test_ds: tf.data.Dataset, \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 Dataset via numpy flower.datasets.load_hasc_from_pkl 1 flower . datasets . load . load_hasc_from_pkl ( window_size = 256 , data_dir = \"./data/\" ) HASC\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092pickle\u304b\u3089\u8aad\u307f\u8fbc\u3080\u3002pickle\u30d5\u30a1\u30a4\u30eb\u304c\u306a\u3044\u5834\u5408\u306f\u3001sensorutils\u3067\u751f\u30c7\u30fc\u30bf\u304b\u3089\u8aad\u307f\u8fbc\u307f\u3001pickle\u3067\u66f8\u304d\u51fa\u3059\u3002 Arguments window_size: \u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba data_dir: \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea Returns x_train: np.ndarray, x\u306e\u5b66\u7fd2\u30c7\u30fc\u30bf y_train: np.ndarray, y\u306e\u5b66\u7fd2\u30c7\u30fc\u30bf x_valid: np.ndarray, x\u306e\u691c\u8a3c\u30c7\u30fc\u30bf y_valid: np.ndarray, y\u306e\u691c\u8a3c\u30c7\u30fc\u30bf x_test: np.ndarray, x\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf y_test: np.ndarray, y\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf flower.datasets.load_uci_from_pkl 1 flower . datasets . load . load_uci_from_pkl ( data_dir = \"./data/\" ) UCI\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092pickle\u304b\u3089\u8aad\u307f\u8fbc\u3080\u3002pickle\u30d5\u30a1\u30a4\u30eb\u304c\u306a\u3044\u5834\u5408\u306f\u3001sensorutils\u3067\u751f\u30c7\u30fc\u30bf\u304b\u3089\u8aad\u307f\u8fbc\u307f\u3001pickle\u3067\u66f8\u304d\u51fa\u3059\u3002 Arguments data_dir: \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea Returns x_train: np.ndarray, x\u306e\u5b66\u7fd2\u30c7\u30fc\u30bf y_train: np.ndarray, y\u306e\u5b66\u7fd2\u30c7\u30fc\u30bf x_valid: np.ndarray, x\u306e\u691c\u8a3c\u30c7\u30fc\u30bf y_valid: np.ndarray, y\u306e\u691c\u8a3c\u30c7\u30fc\u30bf x_test: np.ndarray, x\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf y_test: np.ndarray, y\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf flower.datasets.load_wisdm_from_pkl 1 flower . datasets . load . load_wisdm_from_pkl ( window_size = 256 , data_dir = \"./data/\" ) WISDM\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092pickle\u304b\u3089\u8aad\u307f\u8fbc\u3080\u3002pickle\u30d5\u30a1\u30a4\u30eb\u304c\u306a\u3044\u5834\u5408\u306f\u3001sensorutils\u3067\u751f\u30c7\u30fc\u30bf\u304b\u3089\u8aad\u307f\u8fbc\u307f\u3001pickle\u3067\u66f8\u304d\u51fa\u3059\u3002 Arguments window_size: \u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba data_dir: \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea Returns x_train: np.ndarray, x\u306e\u5b66\u7fd2\u30c7\u30fc\u30bf y_train: np.ndarray, y\u306e\u5b66\u7fd2\u30c7\u30fc\u30bf x_valid: np.ndarray, x\u306e\u691c\u8a3c\u30c7\u30fc\u30bf y_valid: np.ndarray, y\u306e\u691c\u8a3c\u30c7\u30fc\u30bf x_test: np.ndarray, x\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf y_test: np.ndarray, y\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf Generate random subjects dataset flower.datasets.shuffle.generate_shuffled_hasc flower.datasets.shuffle.generate_shuffled_uci flower.datasets.shuffle.generate_shuffled_wisdm","title":"flower.datasets"},{"location":"refs/flower/datasets/#flowerdatasets","text":"","title":"flower.datasets"},{"location":"refs/flower/datasets/#dataset-via-tfdata","text":"","title":"Dataset via tf.data"},{"location":"refs/flower/datasets/#flowerdatasetsdatasetsload_hasc","text":"1 flower . datasets . datasets . load_hasc ( batch = 20 , augmentation = False , extraction = False , shuffled_id = None , valid = True , hcf_only = False , data_dir = \"./data/\" , drop_remainder = True ) HASC\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092 tf.data \u5f62\u5f0f\u3067\u8aad\u307f\u8fbc\u3080\u3002 Reference: HASC Challenge: gathering large scale human activity corpus for the real-world activity understandings","title":"flower.datasets.datasets.load_hasc"},{"location":"refs/flower/datasets/#argments","text":"batch: \u30d0\u30c3\u30c1\u30b5\u30a4\u30ba augmentation: \u30c7\u30fc\u30bf\u62e1\u5f35\u3092\u3059\u308b\u304b\u3069\u3046\u304b extraction: \u7279\u5fb4\u91cf\u62bd\u51fa\u3092\u3059\u308b\u304b\u3069\u3046\u304b shuffled_id: \u30b7\u30e3\u30c3\u30d5\u30eb\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8ID valid: \u691c\u8a3c\u7528\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u304b\u3069\u3046\u304b\u3002True\u306e\u3068\u304d\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092train:valid:test\u3067\u5206\u5272\u3059\u308b\u3002False\u306e\u3068\u304d\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092train(train+valid):test\u3067\u5206\u5272\u3059\u308b hcf_only: \u7279\u5fb4\u91cf\u306e\u307f\u3092\u8fd4\u3059 data_dir: \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea drop_remainder: \u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u4ee5\u4e0b\u306e\u30d0\u30c3\u30c1\u3092\u6368\u3066\u308b\u304b\u3069\u3046\u304b","title":"Argments"},{"location":"refs/flower/datasets/#returns","text":"train_ds: tf.data.Dataset, \u5b66\u7fd2\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 valid_ds: tf.data.Dataset, \u691c\u8a3c\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8, valid=False\u306e\u3068\u304d\u306ftest_ds\u3068\u540c\u3058\u3082\u306e test_ds: tf.data.Dataset, \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8","title":"Returns"},{"location":"refs/flower/datasets/#flowerdatasetsdatasetsload_uci","text":"1 flower . datasets . datasets . load_uci ( batch = 20 , augmentation = False , extraction = False , shuffled_id = None , valid = True , hcf_only = False , data_dir = \"./data/\" , drop_remainder = True ) UCI\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092 tf.data \u5f62\u5f0f\u3067\u8aad\u307f\u8fbc\u3080\u3002 Reference: A Public Domain Dataset for Human Activity Recognition Using Smartphones Dataset link: https://archive.ics.uci.edu/ml/machine-learning-databases/00240/UCI%20HAR%20Dataset.zip","title":"flower.datasets.datasets.load_uci"},{"location":"refs/flower/datasets/#argments_1","text":"batch: \u30d0\u30c3\u30c1\u30b5\u30a4\u30ba augmentation: \u30c7\u30fc\u30bf\u62e1\u5f35\u3092\u3059\u308b\u304b\u3069\u3046\u304b extraction: \u7279\u5fb4\u91cf\u62bd\u51fa\u3092\u3059\u308b\u304b\u3069\u3046\u304b shuffled_id: \u30b7\u30e3\u30c3\u30d5\u30eb\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8ID valid: \u691c\u8a3c\u7528\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u304b\u3069\u3046\u304b\u3002True\u306e\u3068\u304d\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092train:valid:test\u3067\u5206\u5272\u3059\u308b\u3002False\u306e\u3068\u304d\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092train(train+valid):test\u3067\u5206\u5272\u3059\u308b hcf_only: \u7279\u5fb4\u91cf\u306e\u307f\u3092\u8fd4\u3059 data_dir: \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea drop_remainder: \u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u4ee5\u4e0b\u306e\u30d0\u30c3\u30c1\u3092\u6368\u3066\u308b\u304b\u3069\u3046\u304b","title":"Argments"},{"location":"refs/flower/datasets/#returns_1","text":"train_ds: tf.data.Dataset, \u5b66\u7fd2\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 valid_ds: tf.data.Dataset, \u691c\u8a3c\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8, valid=False\u306e\u3068\u304d\u306ftest_ds\u3068\u540c\u3058\u3082\u306e test_ds: tf.data.Dataset, \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8","title":"Returns"},{"location":"refs/flower/datasets/#flowerdatasetsdatasetsload_wisdm","text":"1 flower . datasets . datasets . load_wisdm ( batch = 20 , augmentation = False , extraction = False , shuffled_id = None , valid = True , hcf_only = False , data_dir = \"./data/\" , drop_remainder = True ) WISDM\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092 tf.data \u5f62\u5f0f\u3067\u8aad\u307f\u8fbc\u3080\u3002 Reference: Activity Recognition using Cell Phone Accelerometers Dataset link: https://www.cis.fordham.edu/wisdm/includes/datasets/latest/WISDM_ar_latest.tar.gz","title":"flower.datasets.datasets.load_wisdm"},{"location":"refs/flower/datasets/#argments_2","text":"batch: \u30d0\u30c3\u30c1\u30b5\u30a4\u30ba augmentation: \u30c7\u30fc\u30bf\u62e1\u5f35\u3092\u3059\u308b\u304b\u3069\u3046\u304b extraction: \u7279\u5fb4\u91cf\u62bd\u51fa\u3092\u3059\u308b\u304b\u3069\u3046\u304b shuffled_id: \u30b7\u30e3\u30c3\u30d5\u30eb\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8ID valid: \u691c\u8a3c\u7528\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u304b\u3069\u3046\u304b\u3002True\u306e\u3068\u304d\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092train:valid:test\u3067\u5206\u5272\u3059\u308b\u3002False\u306e\u3068\u304d\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092train(train+valid):test\u3067\u5206\u5272\u3059\u308b hcf_only: \u7279\u5fb4\u91cf\u306e\u307f\u3092\u8fd4\u3059 data_dir: \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea drop_remainder: \u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u4ee5\u4e0b\u306e\u30d0\u30c3\u30c1\u3092\u6368\u3066\u308b\u304b\u3069\u3046\u304b","title":"Argments"},{"location":"refs/flower/datasets/#returns_2","text":"train_ds: tf.data.Dataset, \u5b66\u7fd2\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 valid_ds: tf.data.Dataset, \u691c\u8a3c\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8, valid=False\u306e\u3068\u304d\u306ftest_ds\u3068\u540c\u3058\u3082\u306e test_ds: tf.data.Dataset, \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8","title":"Returns"},{"location":"refs/flower/datasets/#dataset-via-numpy","text":"","title":"Dataset via numpy"},{"location":"refs/flower/datasets/#flowerdatasetsload_hasc_from_pkl","text":"1 flower . datasets . load . load_hasc_from_pkl ( window_size = 256 , data_dir = \"./data/\" ) HASC\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092pickle\u304b\u3089\u8aad\u307f\u8fbc\u3080\u3002pickle\u30d5\u30a1\u30a4\u30eb\u304c\u306a\u3044\u5834\u5408\u306f\u3001sensorutils\u3067\u751f\u30c7\u30fc\u30bf\u304b\u3089\u8aad\u307f\u8fbc\u307f\u3001pickle\u3067\u66f8\u304d\u51fa\u3059\u3002","title":"flower.datasets.load_hasc_from_pkl"},{"location":"refs/flower/datasets/#arguments","text":"window_size: \u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba data_dir: \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea","title":"Arguments"},{"location":"refs/flower/datasets/#returns_3","text":"x_train: np.ndarray, x\u306e\u5b66\u7fd2\u30c7\u30fc\u30bf y_train: np.ndarray, y\u306e\u5b66\u7fd2\u30c7\u30fc\u30bf x_valid: np.ndarray, x\u306e\u691c\u8a3c\u30c7\u30fc\u30bf y_valid: np.ndarray, y\u306e\u691c\u8a3c\u30c7\u30fc\u30bf x_test: np.ndarray, x\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf y_test: np.ndarray, y\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf","title":"Returns"},{"location":"refs/flower/datasets/#flowerdatasetsload_uci_from_pkl","text":"1 flower . datasets . load . load_uci_from_pkl ( data_dir = \"./data/\" ) UCI\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092pickle\u304b\u3089\u8aad\u307f\u8fbc\u3080\u3002pickle\u30d5\u30a1\u30a4\u30eb\u304c\u306a\u3044\u5834\u5408\u306f\u3001sensorutils\u3067\u751f\u30c7\u30fc\u30bf\u304b\u3089\u8aad\u307f\u8fbc\u307f\u3001pickle\u3067\u66f8\u304d\u51fa\u3059\u3002","title":"flower.datasets.load_uci_from_pkl"},{"location":"refs/flower/datasets/#arguments_1","text":"data_dir: \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea","title":"Arguments"},{"location":"refs/flower/datasets/#returns_4","text":"x_train: np.ndarray, x\u306e\u5b66\u7fd2\u30c7\u30fc\u30bf y_train: np.ndarray, y\u306e\u5b66\u7fd2\u30c7\u30fc\u30bf x_valid: np.ndarray, x\u306e\u691c\u8a3c\u30c7\u30fc\u30bf y_valid: np.ndarray, y\u306e\u691c\u8a3c\u30c7\u30fc\u30bf x_test: np.ndarray, x\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf y_test: np.ndarray, y\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf","title":"Returns"},{"location":"refs/flower/datasets/#flowerdatasetsload_wisdm_from_pkl","text":"1 flower . datasets . load . load_wisdm_from_pkl ( window_size = 256 , data_dir = \"./data/\" ) WISDM\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092pickle\u304b\u3089\u8aad\u307f\u8fbc\u3080\u3002pickle\u30d5\u30a1\u30a4\u30eb\u304c\u306a\u3044\u5834\u5408\u306f\u3001sensorutils\u3067\u751f\u30c7\u30fc\u30bf\u304b\u3089\u8aad\u307f\u8fbc\u307f\u3001pickle\u3067\u66f8\u304d\u51fa\u3059\u3002","title":"flower.datasets.load_wisdm_from_pkl"},{"location":"refs/flower/datasets/#arguments_2","text":"window_size: \u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba data_dir: \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea","title":"Arguments"},{"location":"refs/flower/datasets/#returns_5","text":"x_train: np.ndarray, x\u306e\u5b66\u7fd2\u30c7\u30fc\u30bf y_train: np.ndarray, y\u306e\u5b66\u7fd2\u30c7\u30fc\u30bf x_valid: np.ndarray, x\u306e\u691c\u8a3c\u30c7\u30fc\u30bf y_valid: np.ndarray, y\u306e\u691c\u8a3c\u30c7\u30fc\u30bf x_test: np.ndarray, x\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf y_test: np.ndarray, y\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf","title":"Returns"},{"location":"refs/flower/datasets/#generate-random-subjects-dataset","text":"","title":"Generate random subjects dataset"},{"location":"refs/flower/datasets/#flowerdatasetsshufflegenerate_shuffled_hasc","text":"","title":"flower.datasets.shuffle.generate_shuffled_hasc"},{"location":"refs/flower/datasets/#flowerdatasetsshufflegenerate_shuffled_uci","text":"","title":"flower.datasets.shuffle.generate_shuffled_uci"},{"location":"refs/flower/datasets/#flowerdatasetsshufflegenerate_shuffled_wisdm","text":"","title":"flower.datasets.shuffle.generate_shuffled_wisdm"},{"location":"refs/flower/experiments/","text":"flower.experiments Flower Flower is a class for running experiments of this project. Aliases flower.Flower flower.experiments.Flower Initializer 1 2 3 4 5 6 7 8 9 flower . experiements . flower . Flower ( model : flower . options . FlowerModel , module : flower . options . SupportedSubmodule = None , concat_hcf = False , result_dir = \"./results/\" , weight_dir = \"./weights/\" , output_dir = None data_dir = \"./data\" ) Arguments model: flower.utils.SupportedModel, \u5b9f\u9a13\u3092\u5b9f\u65bd\u3059\u308b\u30e2\u30c7\u30eb module: Optional(flower.utils.SupportedSubmodule), \u30e2\u30c7\u30eb\u306b\u633f\u5165\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb. None\u306e\u5834\u5408\u306f\u633f\u5165\u3057\u306a\u3044 concat_hcf: Hand-crafted features\u3092\u7d50\u5408\u3059\u308b\u304b\u3069\u3046\u304b result_dir: \u7d50\u679c\u3092\u4fdd\u5b58\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30d1\u30b9 weight_dir: \u30e2\u30c7\u30eb\u306e\u91cd\u307f\u3092\u4fdd\u5b58\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30d1\u30b9 output_dir: \u7d50\u679c\u3068\u30e2\u30c7\u30eb\u306e\u91cd\u307f\u3092\u4fdd\u5b58\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3001\u6307\u5b9a\u3057\u305f\u5834\u5408 result_dir \u3068 weight_dir \u306f output_dir \u3092\u5143\u306b\u751f\u6210\u3055\u308c\u308b data_dir: \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304c\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30d1\u30b9 flower.fit() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Flower . fit ( epochs = 100 , learning_rate = 1e-3 , batch = 20 , augmentation = False , num_trials = 1 , datasets : SupportedDataset = flower . utils . SupportedDataset . HASC , shuffled = False , seed = 0 , multi_gpu = False , valid = True , dataset_id = None , callbacks = None , small = False ) Arguments epochs: \u30a8\u30dd\u30c3\u30af\u6570, \u30c7\u30d5\u30a9\u30eb\u30c8 100 learning_rate: \u5b66\u7fd2\u7387, \u30c7\u30d5\u30a9\u30eb\u30c8 1e-3 augmentation: \u30c7\u30fc\u30bf\u62e1\u5f35\u3092\u3059\u308b\u304b\u3069\u3046\u304b, \u30c7\u30d5\u30a9\u30eb\u30c8 False num_trials: \u8a66\u884c\u56de\u6570, \u30c7\u30d5\u30a9\u30eb\u30c8 1 datasets: SupportedDataset, \u5b9f\u9a13\u3092\u5b9f\u65bd\u3059\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 shuffled: \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u88ab\u9a13\u8005\u3092\u30b7\u30e3\u30c3\u30d5\u30eb\u3059\u308b\u304b\u3069\u3046\u304b, \u30c7\u30d5\u30a9\u30eb\u30c8 False seed: \u30e9\u30f3\u30c0\u30e0\u306e\u30b7\u30fc\u30c9 multi_gpu: \u30de\u30eb\u30c1GPU\u3067\u5b66\u7fd2\u3059\u308b\u304b\u3069\u3046\u304b, \u30c7\u30d5\u30a9\u30eb\u30c8 False valid: \u691c\u8a3c\u7528\u30c7\u30fc\u30bf\u3092\u4f7f\u3046\u304b\u3069\u3046\u304b\u3001True\u306e\u5834\u5408\u3001valid_ds\u3068test_ds\u306f\u540c\u3058\u3082\u306e dataset_id: \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8ID callbacks: Keras\u306ecallback\u306e\u30ea\u30b9\u30c8 small: True\u306e\u5834\u5408\u3001HASC\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u5b9f\u9a13\u3067\u88ab\u9a13\u8005\u6570\u304c\u5c11\u306a\u3044\u65b9\u3092\u4f7f\u7528\u3059\u308b Leaf Leaf is a class for running experiments of Multi-layer perceptron with Hand-crafted features. Aliases flower.Leaf flower.experiments.Leaf Initializer 1 2 3 4 5 6 flower . experiements . leaf . Leaf ( result_dir = \"./results/\" , weight_dir = \"./weights/\" , output_dir = None data_dir = \"./data\" ) Bouquet Bouquet is a class for running experiments of all SupportedModel . Aliases flower.Bouquet flower.experiments.Bouquet Initializer 1 2 3 4 5 6 7 8 9 flower . experiements . leaf . Leaf ( module : flower . options . SupportedSubmodule = None , concat_hcf = False , result_dir = \"./results/\" , weight_dir = \"./weights/\" , output_dir = None data_dir = \"./data\" , models : [ flower . options . FlowerModel ] = None ) Arguments module: Optional(flower.utils.SupportedSubmodule), \u30e2\u30c7\u30eb\u306b\u633f\u5165\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb. None\u306e\u5834\u5408\u306f\u633f\u5165\u3057\u306a\u3044 concat_hcf: Hand-crafted features\u3092\u7d50\u5408\u3059\u308b\u304b\u3069\u3046\u304b result_dir: \u7d50\u679c\u3092\u4fdd\u5b58\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30d1\u30b9 weight_dir: \u30e2\u30c7\u30eb\u306e\u91cd\u307f\u3092\u4fdd\u5b58\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30d1\u30b9 output_dir: \u7d50\u679c\u3068\u30e2\u30c7\u30eb\u306e\u91cd\u307f\u3092\u4fdd\u5b58\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3001\u6307\u5b9a\u3057\u305f\u5834\u5408 result_dir \u3068 weight_dir \u306f output_dir \u3092\u5143\u306b\u751f\u6210\u3055\u308c\u308b data_dir: \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304c\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30d1\u30b9 models: \u5b9f\u9a13\u3092\u884c\u3046\u30e2\u30c7\u30eb\u306e\u30ea\u30b9\u30c8\u3001 flower.options.FlowerModel \u3092\u7d99\u627f\u3057\u305f\u30e2\u30c7\u30eb\u306e\u6307\u5b9a\u3067\u3042\u308c\u3070\u5229\u7528\u53ef\u80fd\u3001 None \u306e\u3068\u304d\u306f flower.options.SupportedModel.all_cases() \u3092\u4f7f\u3046","title":"flower.experiments"},{"location":"refs/flower/experiments/#flowerexperiments","text":"","title":"flower.experiments"},{"location":"refs/flower/experiments/#flower","text":"Flower is a class for running experiments of this project.","title":"Flower"},{"location":"refs/flower/experiments/#aliases","text":"flower.Flower flower.experiments.Flower","title":"Aliases"},{"location":"refs/flower/experiments/#initializer","text":"1 2 3 4 5 6 7 8 9 flower . experiements . flower . Flower ( model : flower . options . FlowerModel , module : flower . options . SupportedSubmodule = None , concat_hcf = False , result_dir = \"./results/\" , weight_dir = \"./weights/\" , output_dir = None data_dir = \"./data\" )","title":"Initializer"},{"location":"refs/flower/experiments/#arguments","text":"model: flower.utils.SupportedModel, \u5b9f\u9a13\u3092\u5b9f\u65bd\u3059\u308b\u30e2\u30c7\u30eb module: Optional(flower.utils.SupportedSubmodule), \u30e2\u30c7\u30eb\u306b\u633f\u5165\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb. None\u306e\u5834\u5408\u306f\u633f\u5165\u3057\u306a\u3044 concat_hcf: Hand-crafted features\u3092\u7d50\u5408\u3059\u308b\u304b\u3069\u3046\u304b result_dir: \u7d50\u679c\u3092\u4fdd\u5b58\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30d1\u30b9 weight_dir: \u30e2\u30c7\u30eb\u306e\u91cd\u307f\u3092\u4fdd\u5b58\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30d1\u30b9 output_dir: \u7d50\u679c\u3068\u30e2\u30c7\u30eb\u306e\u91cd\u307f\u3092\u4fdd\u5b58\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3001\u6307\u5b9a\u3057\u305f\u5834\u5408 result_dir \u3068 weight_dir \u306f output_dir \u3092\u5143\u306b\u751f\u6210\u3055\u308c\u308b data_dir: \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304c\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30d1\u30b9","title":"Arguments"},{"location":"refs/flower/experiments/#flowerfit","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Flower . fit ( epochs = 100 , learning_rate = 1e-3 , batch = 20 , augmentation = False , num_trials = 1 , datasets : SupportedDataset = flower . utils . SupportedDataset . HASC , shuffled = False , seed = 0 , multi_gpu = False , valid = True , dataset_id = None , callbacks = None , small = False )","title":"flower.fit()"},{"location":"refs/flower/experiments/#arguments_1","text":"epochs: \u30a8\u30dd\u30c3\u30af\u6570, \u30c7\u30d5\u30a9\u30eb\u30c8 100 learning_rate: \u5b66\u7fd2\u7387, \u30c7\u30d5\u30a9\u30eb\u30c8 1e-3 augmentation: \u30c7\u30fc\u30bf\u62e1\u5f35\u3092\u3059\u308b\u304b\u3069\u3046\u304b, \u30c7\u30d5\u30a9\u30eb\u30c8 False num_trials: \u8a66\u884c\u56de\u6570, \u30c7\u30d5\u30a9\u30eb\u30c8 1 datasets: SupportedDataset, \u5b9f\u9a13\u3092\u5b9f\u65bd\u3059\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 shuffled: \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u88ab\u9a13\u8005\u3092\u30b7\u30e3\u30c3\u30d5\u30eb\u3059\u308b\u304b\u3069\u3046\u304b, \u30c7\u30d5\u30a9\u30eb\u30c8 False seed: \u30e9\u30f3\u30c0\u30e0\u306e\u30b7\u30fc\u30c9 multi_gpu: \u30de\u30eb\u30c1GPU\u3067\u5b66\u7fd2\u3059\u308b\u304b\u3069\u3046\u304b, \u30c7\u30d5\u30a9\u30eb\u30c8 False valid: \u691c\u8a3c\u7528\u30c7\u30fc\u30bf\u3092\u4f7f\u3046\u304b\u3069\u3046\u304b\u3001True\u306e\u5834\u5408\u3001valid_ds\u3068test_ds\u306f\u540c\u3058\u3082\u306e dataset_id: \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8ID callbacks: Keras\u306ecallback\u306e\u30ea\u30b9\u30c8 small: True\u306e\u5834\u5408\u3001HASC\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u5b9f\u9a13\u3067\u88ab\u9a13\u8005\u6570\u304c\u5c11\u306a\u3044\u65b9\u3092\u4f7f\u7528\u3059\u308b","title":"Arguments"},{"location":"refs/flower/experiments/#leaf","text":"Leaf is a class for running experiments of Multi-layer perceptron with Hand-crafted features.","title":"Leaf"},{"location":"refs/flower/experiments/#aliases_1","text":"flower.Leaf flower.experiments.Leaf","title":"Aliases"},{"location":"refs/flower/experiments/#initializer_1","text":"1 2 3 4 5 6 flower . experiements . leaf . Leaf ( result_dir = \"./results/\" , weight_dir = \"./weights/\" , output_dir = None data_dir = \"./data\" )","title":"Initializer"},{"location":"refs/flower/experiments/#bouquet","text":"Bouquet is a class for running experiments of all SupportedModel .","title":"Bouquet"},{"location":"refs/flower/experiments/#aliases_2","text":"flower.Bouquet flower.experiments.Bouquet","title":"Aliases"},{"location":"refs/flower/experiments/#initializer_2","text":"1 2 3 4 5 6 7 8 9 flower . experiements . leaf . Leaf ( module : flower . options . SupportedSubmodule = None , concat_hcf = False , result_dir = \"./results/\" , weight_dir = \"./weights/\" , output_dir = None data_dir = \"./data\" , models : [ flower . options . FlowerModel ] = None )","title":"Initializer"},{"location":"refs/flower/experiments/#arguments_2","text":"module: Optional(flower.utils.SupportedSubmodule), \u30e2\u30c7\u30eb\u306b\u633f\u5165\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb. None\u306e\u5834\u5408\u306f\u633f\u5165\u3057\u306a\u3044 concat_hcf: Hand-crafted features\u3092\u7d50\u5408\u3059\u308b\u304b\u3069\u3046\u304b result_dir: \u7d50\u679c\u3092\u4fdd\u5b58\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30d1\u30b9 weight_dir: \u30e2\u30c7\u30eb\u306e\u91cd\u307f\u3092\u4fdd\u5b58\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30d1\u30b9 output_dir: \u7d50\u679c\u3068\u30e2\u30c7\u30eb\u306e\u91cd\u307f\u3092\u4fdd\u5b58\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3001\u6307\u5b9a\u3057\u305f\u5834\u5408 result_dir \u3068 weight_dir \u306f output_dir \u3092\u5143\u306b\u751f\u6210\u3055\u308c\u308b data_dir: \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304c\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30d1\u30b9 models: \u5b9f\u9a13\u3092\u884c\u3046\u30e2\u30c7\u30eb\u306e\u30ea\u30b9\u30c8\u3001 flower.options.FlowerModel \u3092\u7d99\u627f\u3057\u305f\u30e2\u30c7\u30eb\u306e\u6307\u5b9a\u3067\u3042\u308c\u3070\u5229\u7528\u53ef\u80fd\u3001 None \u306e\u3068\u304d\u306f flower.options.SupportedModel.all_cases() \u3092\u4f7f\u3046","title":"Arguments"},{"location":"refs/flower/features/","text":"flower.features hand-crafted features flower.features.intensity 1 flower . features . intensity ( x , axis = 1 ) \u52d5\u304d\u306e\u6fc0\u3057\u3055 (intensity) Arguments x: \u30bb\u30f3\u30b5\u30c7\u30fc\u30bf axis: \u8ef8 Returns features flower.features.zcr 1 flower . features . zcr ( x , axis = 1 ) \u30bc\u30ed\u4ea4\u5dee\u7387 (zero-crossing rate) Arguments x: \u30bb\u30f3\u30b5\u30c7\u30fc\u30bf axis: \u8ef8 Returns features extracting features flower.features.extracting_features 1 flower . features . etracting_features ( x , axis = 1 ) flower\u3067\u4f7f\u7528\u3059\u308b\u7279\u5fb4\u91cf\u3092\u62bd\u51fa\u3059\u308b\u95a2\u6570 extracted features max min mean standard deviation 1st quartiles median 3rd quartiles interquartile range max of absolute value min of absolute value mean of absolute value standard deviation of absolute value rms initial value in the frame final value in the frame intensity skewness kurtosis zero-crossing rate max of power spectrum standard deviation of power spectrum 1st quartiles of power spectrum median of power spectrum 3rd quartiles of power spectrum interquartile range of power spectrum Arguments x: \u30bb\u30f3\u30b5\u30c7\u30fc\u30bf axis: \u8ef8 Returns features tf.function tf.data.Dataset.map() \u3067\u4f7f\u3046\u95a2\u6570 flower.features.raw_and_extract 1 flower.features.raw_and_extract(x, y) \u751f\u30c7\u30fc\u30bf\u3068\u7279\u5fb4\u91cf\u3092\u8fd4\u3059 Arguments x: channel-last\u306a\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf, shape=(batch_size, window_size, channel) y: x\u306b\u5bfe\u5fdc\u3059\u308b\u30e9\u30d9\u30eb Returns (x, f), y: (\u751f\u30c7\u30fc\u30bf, \u7279\u5fb4\u91cf), \u30e9\u30d9\u30eb flower.features.extract 1 flower . features . extract ( x , y ) \u7279\u5fb4\u91cf\u3092\u8fd4\u3059 Arguments x: channel-last\u306a\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf, shape=(batch_size, window_size, channel) y: x\u306b\u5bfe\u5fdc\u3059\u308b\u30e9\u30d9\u30eb Returns f, y: \u7279\u5fb4\u91cf, \u30e9\u30d9\u30eb flower.features.augemt_raw_and_extract 1 flower.features.augment_raw_and_extract(x, y) \u30c7\u30fc\u30bf\u62e1\u5f35\u3057\u305f\u751f\u30c7\u30fc\u30bf\u3068\u7279\u5fb4\u91cf\u3092\u8fd4\u3059 Arguments x: channel-last\u306a\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf, shape=(batch_size, window_size, channel) y: x\u306b\u5bfe\u5fdc\u3059\u308b\u30e9\u30d9\u30eb Returns (x, f), y: (\u751f\u30c7\u30fc\u30bf, \u7279\u5fb4\u91cf), \u30e9\u30d9\u30eb flower.features.augment_extract 1 flower . features . augment_extract ( x , y ) \u30c7\u30fc\u30bf\u62e1\u5f35\u3057\u305f\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u7279\u5fb4\u91cf\u3092\u8fd4\u3059 Arguments x: channel-last\u306a\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf, shape=(batch_size, window_size, channel) y: x\u306b\u5bfe\u5fdc\u3059\u308b\u30e9\u30d9\u30eb","title":"flower.features"},{"location":"refs/flower/features/#flowerfeatures","text":"","title":"flower.features"},{"location":"refs/flower/features/#hand-crafted-features","text":"","title":"hand-crafted features"},{"location":"refs/flower/features/#flowerfeaturesintensity","text":"1 flower . features . intensity ( x , axis = 1 ) \u52d5\u304d\u306e\u6fc0\u3057\u3055 (intensity)","title":"flower.features.intensity"},{"location":"refs/flower/features/#arguments","text":"x: \u30bb\u30f3\u30b5\u30c7\u30fc\u30bf axis: \u8ef8","title":"Arguments"},{"location":"refs/flower/features/#returns","text":"features","title":"Returns"},{"location":"refs/flower/features/#flowerfeatureszcr","text":"1 flower . features . zcr ( x , axis = 1 ) \u30bc\u30ed\u4ea4\u5dee\u7387 (zero-crossing rate)","title":"flower.features.zcr"},{"location":"refs/flower/features/#arguments_1","text":"x: \u30bb\u30f3\u30b5\u30c7\u30fc\u30bf axis: \u8ef8","title":"Arguments"},{"location":"refs/flower/features/#returns_1","text":"features","title":"Returns"},{"location":"refs/flower/features/#extracting-features","text":"","title":"extracting features"},{"location":"refs/flower/features/#flowerfeaturesextracting_features","text":"1 flower . features . etracting_features ( x , axis = 1 ) flower\u3067\u4f7f\u7528\u3059\u308b\u7279\u5fb4\u91cf\u3092\u62bd\u51fa\u3059\u308b\u95a2\u6570","title":"flower.features.extracting_features"},{"location":"refs/flower/features/#extracted-features","text":"max min mean standard deviation 1st quartiles median 3rd quartiles interquartile range max of absolute value min of absolute value mean of absolute value standard deviation of absolute value rms initial value in the frame final value in the frame intensity skewness kurtosis zero-crossing rate max of power spectrum standard deviation of power spectrum 1st quartiles of power spectrum median of power spectrum 3rd quartiles of power spectrum interquartile range of power spectrum","title":"extracted features"},{"location":"refs/flower/features/#arguments_2","text":"x: \u30bb\u30f3\u30b5\u30c7\u30fc\u30bf axis: \u8ef8","title":"Arguments"},{"location":"refs/flower/features/#returns_2","text":"features","title":"Returns"},{"location":"refs/flower/features/#tffunction","text":"tf.data.Dataset.map() \u3067\u4f7f\u3046\u95a2\u6570","title":"tf.function"},{"location":"refs/flower/features/#flowerfeaturesraw_and_extract","text":"1 flower.features.raw_and_extract(x, y) \u751f\u30c7\u30fc\u30bf\u3068\u7279\u5fb4\u91cf\u3092\u8fd4\u3059","title":"flower.features.raw_and_extract"},{"location":"refs/flower/features/#arguments_3","text":"x: channel-last\u306a\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf, shape=(batch_size, window_size, channel) y: x\u306b\u5bfe\u5fdc\u3059\u308b\u30e9\u30d9\u30eb","title":"Arguments"},{"location":"refs/flower/features/#returns_3","text":"(x, f), y: (\u751f\u30c7\u30fc\u30bf, \u7279\u5fb4\u91cf), \u30e9\u30d9\u30eb","title":"Returns"},{"location":"refs/flower/features/#flowerfeaturesextract","text":"1 flower . features . extract ( x , y ) \u7279\u5fb4\u91cf\u3092\u8fd4\u3059","title":"flower.features.extract"},{"location":"refs/flower/features/#arguments_4","text":"x: channel-last\u306a\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf, shape=(batch_size, window_size, channel) y: x\u306b\u5bfe\u5fdc\u3059\u308b\u30e9\u30d9\u30eb","title":"Arguments"},{"location":"refs/flower/features/#returns_4","text":"f, y: \u7279\u5fb4\u91cf, \u30e9\u30d9\u30eb","title":"Returns"},{"location":"refs/flower/features/#flowerfeaturesaugemt_raw_and_extract","text":"1 flower.features.augment_raw_and_extract(x, y) \u30c7\u30fc\u30bf\u62e1\u5f35\u3057\u305f\u751f\u30c7\u30fc\u30bf\u3068\u7279\u5fb4\u91cf\u3092\u8fd4\u3059","title":"flower.features.augemt_raw_and_extract"},{"location":"refs/flower/features/#arguments_5","text":"x: channel-last\u306a\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf, shape=(batch_size, window_size, channel) y: x\u306b\u5bfe\u5fdc\u3059\u308b\u30e9\u30d9\u30eb","title":"Arguments"},{"location":"refs/flower/features/#returns_5","text":"(x, f), y: (\u751f\u30c7\u30fc\u30bf, \u7279\u5fb4\u91cf), \u30e9\u30d9\u30eb","title":"Returns"},{"location":"refs/flower/features/#flowerfeaturesaugment_extract","text":"1 flower . features . augment_extract ( x , y ) \u30c7\u30fc\u30bf\u62e1\u5f35\u3057\u305f\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u7279\u5fb4\u91cf\u3092\u8fd4\u3059","title":"flower.features.augment_extract"},{"location":"refs/flower/features/#arguments_6","text":"x: channel-last\u306a\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf, shape=(batch_size, window_size, channel) y: x\u306b\u5bfe\u5fdc\u3059\u308b\u30e9\u30d9\u30eb","title":"Arguments"},{"location":"refs/flower/hydrangea/","text":"a# hydrangea hydrangea is a sub-framework for flower . In hydrangea , Attention modules and models that can insert the Attention module have been implemented. The models with attention are based on tfgarden . See tfgarden for reference papers of models other than Li2018. Models flower.hydrangea.models Li2018 Li2018WithAttention Reference: Comparison of Feature Learning Methods for Human Activity Recognition Using Wearable Sensors (Sensors, Vol.18, No. 679, 2019) VGG16WithAttention InceptionV3WithAttention ResNet18WithAttention PyramidNet18WithAttention XceptionWithAttention DenseNet121WithAttention MobileNetWithAttention MobileNetV2WithAttention MobileNetV3SmallWithAttention NASNetMobileWithAttention MnasNetWithAttention EfficientNetB0WithAttention EfficientNet_lite0WithAttention Attention flower.hydrangea.attention SqueezeAndExcite SelectiveKernel ConvBlockAttention flower.hydrangea.attention.SqueezeAndExcite 1 SqueezeAndExcite ( filters , se_ratio = 0.25 , block_name = \"\" ) Reference: Squeeze-and-Excitation Networks (CVPR 2015) Arguments filters: \u51fa\u529b\u30d5\u30a3\u30eb\u30bf\u30b5\u30a4\u30ba se_ratio: \u5165\u529b\u30d5\u30a3\u30eb\u30bf\u3092\u7d5e\u308b\u6bd4\u7387, 0 < se_ratio <= 1 block_name: \u30d6\u30ed\u30c3\u30af\u540d flower.hydrangea.attention.SelectiveKernel 1 SelectiveKernel ( filters , block_name = \"\" ) Reference: Selective Kernel Networks (CVPR 2019) Arguments filters: \u51fa\u529b\u30d5\u30a3\u30eb\u30bf\u30b5\u30a4\u30ba block_name: \u30d6\u30ed\u30c3\u30af\u540d flower.hydrangea.attention.ConvBlockAttention 1 ConvBlockAttention ( filters , ratio = 0.125 , block_name = \"\" ) Reference: CBAM: Convolutinal Block Attention Module (ECCV 2018) Arguments filters: \u51fa\u529b\u30d5\u30a3\u30eb\u30bf\u30b5\u30a4\u30ba ratio: \u5165\u529b\u30d5\u30a3\u30eb\u30bf\u3092\u7d5e\u308b\u6bd4\u7387, 0 < ratio <= 1 block_name: \u30d6\u30ed\u30c3\u30af\u540d flower.hydrangea.attention.ChannelAttention 1 ChannelAttention ( filters , ratio = 0.125 , block_name = \"\" ) Arguments filters: \u51fa\u529b\u30d5\u30a3\u30eb\u30bf\u30b5\u30a4\u30ba ratio: \u5165\u529b\u30d5\u30a3\u30eb\u30bf\u3092\u7d5e\u308b\u6bd4\u7387, 0 < ratio <= 1 block_name: \u30d6\u30ed\u30c3\u30af\u540d flower.hydrangea.attention.SpatialAttention 1 SpatialAttention ( block_name = \"\" ) Arguments block_name: \u30d6\u30ed\u30c3\u30af\u540d","title":"Hydrangea"},{"location":"refs/flower/hydrangea/#models","text":"flower.hydrangea.models Li2018 Li2018WithAttention Reference: Comparison of Feature Learning Methods for Human Activity Recognition Using Wearable Sensors (Sensors, Vol.18, No. 679, 2019) VGG16WithAttention InceptionV3WithAttention ResNet18WithAttention PyramidNet18WithAttention XceptionWithAttention DenseNet121WithAttention MobileNetWithAttention MobileNetV2WithAttention MobileNetV3SmallWithAttention NASNetMobileWithAttention MnasNetWithAttention EfficientNetB0WithAttention EfficientNet_lite0WithAttention","title":"Models"},{"location":"refs/flower/hydrangea/#attention","text":"flower.hydrangea.attention SqueezeAndExcite SelectiveKernel ConvBlockAttention","title":"Attention"},{"location":"refs/flower/hydrangea/#flowerhydrangeaattentionsqueezeandexcite","text":"1 SqueezeAndExcite ( filters , se_ratio = 0.25 , block_name = \"\" ) Reference: Squeeze-and-Excitation Networks (CVPR 2015)","title":"flower.hydrangea.attention.SqueezeAndExcite"},{"location":"refs/flower/hydrangea/#arguments","text":"filters: \u51fa\u529b\u30d5\u30a3\u30eb\u30bf\u30b5\u30a4\u30ba se_ratio: \u5165\u529b\u30d5\u30a3\u30eb\u30bf\u3092\u7d5e\u308b\u6bd4\u7387, 0 < se_ratio <= 1 block_name: \u30d6\u30ed\u30c3\u30af\u540d","title":"Arguments"},{"location":"refs/flower/hydrangea/#flowerhydrangeaattentionselectivekernel","text":"1 SelectiveKernel ( filters , block_name = \"\" ) Reference: Selective Kernel Networks (CVPR 2019)","title":"flower.hydrangea.attention.SelectiveKernel"},{"location":"refs/flower/hydrangea/#arguments_1","text":"filters: \u51fa\u529b\u30d5\u30a3\u30eb\u30bf\u30b5\u30a4\u30ba block_name: \u30d6\u30ed\u30c3\u30af\u540d","title":"Arguments"},{"location":"refs/flower/hydrangea/#flowerhydrangeaattentionconvblockattention","text":"1 ConvBlockAttention ( filters , ratio = 0.125 , block_name = \"\" ) Reference: CBAM: Convolutinal Block Attention Module (ECCV 2018)","title":"flower.hydrangea.attention.ConvBlockAttention"},{"location":"refs/flower/hydrangea/#arguments_2","text":"filters: \u51fa\u529b\u30d5\u30a3\u30eb\u30bf\u30b5\u30a4\u30ba ratio: \u5165\u529b\u30d5\u30a3\u30eb\u30bf\u3092\u7d5e\u308b\u6bd4\u7387, 0 < ratio <= 1 block_name: \u30d6\u30ed\u30c3\u30af\u540d","title":"Arguments"},{"location":"refs/flower/hydrangea/#flowerhydrangeaattentionchannelattention","text":"1 ChannelAttention ( filters , ratio = 0.125 , block_name = \"\" )","title":"flower.hydrangea.attention.ChannelAttention"},{"location":"refs/flower/hydrangea/#arguments_3","text":"filters: \u51fa\u529b\u30d5\u30a3\u30eb\u30bf\u30b5\u30a4\u30ba ratio: \u5165\u529b\u30d5\u30a3\u30eb\u30bf\u3092\u7d5e\u308b\u6bd4\u7387, 0 < ratio <= 1 block_name: \u30d6\u30ed\u30c3\u30af\u540d","title":"Arguments"},{"location":"refs/flower/hydrangea/#flowerhydrangeaattentionspatialattention","text":"1 SpatialAttention ( block_name = \"\" )","title":"flower.hydrangea.attention.SpatialAttention"},{"location":"refs/flower/hydrangea/#arguments_4","text":"block_name: \u30d6\u30ed\u30c3\u30af\u540d","title":"Arguments"},{"location":"refs/flower/options/","text":"flower.options SupportedModel 1 flower . utils . SupportedModel case SimpleCNN case VGG16 case InceptionV3 case ResNet18 case PyramidNet18 case Xception case DenseNet121 case MobileNet case MobileNetV2 case MobileNetV3Small case NASNetMobile case MnasNet case EfficientNetB0 case EfficientNetLite0 Aliases flower.SupportedModel build_model() 1 SupportedModel . build_model ( input_shape = ( 256 , 3 ), classes = 6 , submodule : SupportedSubmodule = None , concat_hcf = False , num_features = 3 * 25 ) -> tf . keras . models . Model \u30e2\u30c7\u30eb\u3092\u30d3\u30eb\u30c9\u3059\u308b Arguments input_shape: \u30e2\u30c7\u30eb\u306einput shape, \u30c7\u30d5\u30a9\u30eb\u30c8 (256, 3) classes: \u51fa\u529b\u30af\u30e9\u30b9\u6570, \u30c7\u30d5\u30a9\u30eb\u30c8 6 submodule: Optional(flower.utils.SupportedSubmodule), \u633f\u5165\u3059\u308b\u30b5\u30d6\u30e2\u30b8\u30e5\u30fc\u30eb concat_hcf: Hand-crafted features\u3092\u7d50\u5408\u3059\u308b\u304b\u3069\u3046\u304b num_features: \u7d50\u5408\u3059\u308bHCF\u306e\u6570, concat_hcf=True\u306e\u3068\u304d\u306b\u6709\u52b9 Returns model: tf.keras.models.Model SupportedSubmodule 1 flower . utils . SupportedSubmodule Attention modules case SENet case SKNet case CBAM RNN modules case GRU case LSTM case bi-LSTM Aliases flower.SupportedSubmodule module() 1 SupportedSubmodule . module () -> flower . hydrangea . attention . BaseAttention Attention\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30d3\u30eb\u30c9\u3059\u308b ( SupportedModel.build_model() \u5185\u3067\u5229\u7528\u3055\u308c\u308b) Returns module: flower.hydrangea.attention.BaseAttention SupportedDataset 1 flower . utils . SupportedDataset case HASC case WISDM case UCI case All Aliases flower.SupportedDataset FlowerModel build_model() 1 SupportedModel . build_model ( input_shape = ( 256 , 3 ), classes = 6 , submodule : SupportedSubmodule = None , concat_hcf = False , num_features = 3 * 25 ) -> tf . keras . models . Model","title":"flower.options"},{"location":"refs/flower/options/#floweroptions","text":"","title":"flower.options"},{"location":"refs/flower/options/#supportedmodel","text":"1 flower . utils . SupportedModel case SimpleCNN case VGG16 case InceptionV3 case ResNet18 case PyramidNet18 case Xception case DenseNet121 case MobileNet case MobileNetV2 case MobileNetV3Small case NASNetMobile case MnasNet case EfficientNetB0 case EfficientNetLite0","title":"SupportedModel"},{"location":"refs/flower/options/#aliases","text":"flower.SupportedModel","title":"Aliases"},{"location":"refs/flower/options/#build_model","text":"1 SupportedModel . build_model ( input_shape = ( 256 , 3 ), classes = 6 , submodule : SupportedSubmodule = None , concat_hcf = False , num_features = 3 * 25 ) -> tf . keras . models . Model \u30e2\u30c7\u30eb\u3092\u30d3\u30eb\u30c9\u3059\u308b","title":"build_model()"},{"location":"refs/flower/options/#arguments","text":"input_shape: \u30e2\u30c7\u30eb\u306einput shape, \u30c7\u30d5\u30a9\u30eb\u30c8 (256, 3) classes: \u51fa\u529b\u30af\u30e9\u30b9\u6570, \u30c7\u30d5\u30a9\u30eb\u30c8 6 submodule: Optional(flower.utils.SupportedSubmodule), \u633f\u5165\u3059\u308b\u30b5\u30d6\u30e2\u30b8\u30e5\u30fc\u30eb concat_hcf: Hand-crafted features\u3092\u7d50\u5408\u3059\u308b\u304b\u3069\u3046\u304b num_features: \u7d50\u5408\u3059\u308bHCF\u306e\u6570, concat_hcf=True\u306e\u3068\u304d\u306b\u6709\u52b9","title":"Arguments"},{"location":"refs/flower/options/#returns","text":"model: tf.keras.models.Model","title":"Returns"},{"location":"refs/flower/options/#supportedsubmodule","text":"1 flower . utils . SupportedSubmodule Attention modules case SENet case SKNet case CBAM RNN modules case GRU case LSTM case bi-LSTM","title":"SupportedSubmodule"},{"location":"refs/flower/options/#aliases_1","text":"flower.SupportedSubmodule","title":"Aliases"},{"location":"refs/flower/options/#module","text":"1 SupportedSubmodule . module () -> flower . hydrangea . attention . BaseAttention Attention\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30d3\u30eb\u30c9\u3059\u308b ( SupportedModel.build_model() \u5185\u3067\u5229\u7528\u3055\u308c\u308b)","title":"module()"},{"location":"refs/flower/options/#returns_1","text":"module: flower.hydrangea.attention.BaseAttention","title":"Returns"},{"location":"refs/flower/options/#supporteddataset","text":"1 flower . utils . SupportedDataset case HASC case WISDM case UCI case All","title":"SupportedDataset"},{"location":"refs/flower/options/#aliases_2","text":"flower.SupportedDataset","title":"Aliases"},{"location":"refs/flower/options/#flowermodel","text":"","title":"FlowerModel"},{"location":"refs/flower/options/#build_model_1","text":"1 SupportedModel . build_model ( input_shape = ( 256 , 3 ), classes = 6 , submodule : SupportedSubmodule = None , concat_hcf = False , num_features = 3 * 25 ) -> tf . keras . models . Model","title":"build_model()"}]}